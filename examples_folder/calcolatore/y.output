Terminals which are not used

   IF


Grammar

    0 $accept: line $end

    1 line: expr '\n'
    2     | ID
    3     | error

    4 expr: expr '+' expr
    5     | expr '-' expr
    6     | expr '*' expr
    7     | expr '/' expr
    8     | NUM
    9     | '-' expr
   10     | error


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 1
'*' (42) 6
'+' (43) 4
'-' (45) 5 9
'/' (47) 7
error (256) 3 10
NUM (258) 8
IF (259)
ID (260) 2
UMINUS (261)


Nonterminals, with rules where they appear

$accept (12)
    on left: 0
line (13)
    on left: 1 2 3, on right: 0
expr (14)
    on left: 4 5 6 7 8 9 10, on right: 1 4 5 6 7 9


state 0

    0 $accept: . line $end

    error  shift, and go to state 1
    NUM    shift, and go to state 2
    ID     shift, and go to state 3
    '-'    shift, and go to state 4

    line  go to state 5
    expr  go to state 6


state 1

    3 line: error .
   10 expr: error .

    $end      reduce using rule 3 (line)
    $default  reduce using rule 10 (expr)


state 2

    8 expr: NUM .

    $default  reduce using rule 8 (expr)


state 3

    2 line: ID .

    $default  reduce using rule 2 (line)


state 4

    9 expr: '-' . expr

    error  shift, and go to state 7
    NUM    shift, and go to state 2
    '-'    shift, and go to state 4

    expr  go to state 8


state 5

    0 $accept: line . $end

    $end  shift, and go to state 9


state 6

    1 line: expr . '\n'
    4 expr: expr . '+' expr
    5     | expr . '-' expr
    6     | expr . '*' expr
    7     | expr . '/' expr

    '-'   shift, and go to state 10
    '+'   shift, and go to state 11
    '*'   shift, and go to state 12
    '/'   shift, and go to state 13
    '\n'  shift, and go to state 14


state 7

   10 expr: error .

    $default  reduce using rule 10 (expr)


state 8

    4 expr: expr . '+' expr
    5     | expr . '-' expr
    6     | expr . '*' expr
    7     | expr . '/' expr
    9     | '-' expr .

    $default  reduce using rule 9 (expr)


state 9

    0 $accept: line $end .

    $default  accept


state 10

    5 expr: expr '-' . expr

    error  shift, and go to state 7
    NUM    shift, and go to state 2
    '-'    shift, and go to state 4

    expr  go to state 15


state 11

    4 expr: expr '+' . expr

    error  shift, and go to state 7
    NUM    shift, and go to state 2
    '-'    shift, and go to state 4

    expr  go to state 16


state 12

    6 expr: expr '*' . expr

    error  shift, and go to state 7
    NUM    shift, and go to state 2
    '-'    shift, and go to state 4

    expr  go to state 17


state 13

    7 expr: expr '/' . expr

    error  shift, and go to state 7
    NUM    shift, and go to state 2
    '-'    shift, and go to state 4

    expr  go to state 18


state 14

    1 line: expr '\n' .

    $default  reduce using rule 1 (line)


state 15

    4 expr: expr . '+' expr
    5     | expr . '-' expr
    5     | expr '-' expr .
    6     | expr . '*' expr
    7     | expr . '/' expr

    '*'  shift, and go to state 12
    '/'  shift, and go to state 13

    $default  reduce using rule 5 (expr)


state 16

    4 expr: expr . '+' expr
    4     | expr '+' expr .
    5     | expr . '-' expr
    6     | expr . '*' expr
    7     | expr . '/' expr

    '*'  shift, and go to state 12
    '/'  shift, and go to state 13

    $default  reduce using rule 4 (expr)


state 17

    4 expr: expr . '+' expr
    5     | expr . '-' expr
    6     | expr . '*' expr
    6     | expr '*' expr .
    7     | expr . '/' expr

    $default  reduce using rule 6 (expr)


state 18

    4 expr: expr . '+' expr
    5     | expr . '-' expr
    6     | expr . '*' expr
    7     | expr . '/' expr
    7     | expr '/' expr .

    $default  reduce using rule 7 (expr)
